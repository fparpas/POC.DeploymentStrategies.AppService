on: workflow_dispatch
name: Deploy Azure Services
jobs:
  Build-and-Test:
    runs-on: ubuntu-latest
    name: Dotnet Build and Test
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0
      - run: dotnet build BlazorAppTest
      - run: dotnet test TestProject
    
  Deploy-Azure-Services:
    name: Deploy Azure Services if Not Exist
    runs-on: ubuntu-latest
    needs: [Build-and-Test]
    steps:
      # Checkout code
    - uses: actions/checkout@main

      # Log into Azure
    - uses: Azure/login@v1.4.6
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Bicep file
    - name: Deploy Services
      uses: azure/arm-deploy@v1.0.8
      with:
        scope: 'subscription'
        region: ${{ secrets.AZURE_RESOURCEGROUP_LOCATION }}
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RESOURCEGROUP_NAME }}
        template: ./IaC/main.bicep
        parameters: resourceGroupName=${{ secrets.AZURE_RESOURCEGROUP_NAME }} resourceGroupLocation=${{ secrets.AZURE_RESOURCEGROUP_LOCATION }} appServiceName=${{ secrets.AZURE_APPSERVICE_NAME }}
        failOnStdErr: false
  
  Deploy-Staging:
    name: Deploy Staging Environment
    needs: [Deploy-Azure-Services]
    runs-on: ubuntu-latest
    steps:    
     # Log into Azure
    - uses: Azure/login@v1.4.6
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: ${{ secrets.AZURE_APPSERVICE_NAME }}
        # Enter an existing Slot other than the Production slot
        slot-name: Staging
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy        
  
  Swap-Production:
    needs: [Deploy-Staging]
    runs-on: ubuntu-latest
    steps:
     # Log into Azure
    - uses: Azure/login@v1.4.6
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Swap to production slot
      run: |
        az webapp deployment slot swap --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_APPSERVICE_NAME }} --slot staging --target-slot production
        echo "Swap finished. WebApp accessible at https://$(az webapp show --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_APPSERVICE_NAME }} --query hostNames[0] -o tsv)"
  
        
  

